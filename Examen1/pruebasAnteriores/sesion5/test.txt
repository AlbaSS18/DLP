# Variable and function definitions
i, j, n: int;
c: char;
t, r, o, v: [6][7][9]double;
hola: struct {
	m, n: char;
};

# Empty function
def p(): { }

def f(n: int,r: double): int {
  	real: double;
  	c1, c2: char;  
	c1 = (char)n;
  	real = (double)c1 + (double)n + r;
  	p(); # Invocation as a statement
  	return (int)c1;
}

def main(): {
	# Record
  	pair: struct {
    	integer: int;
    	character: char;
  	};
  	
  	# Array
  	vector: [10][5]int;
  	  
  	i=0;
  	j = (double) 0;
  	while i<10 : {
    	while j<5 : {
      		vector[i][j] = i + j;
      		j=j+1;
		}
		i=i+1;
  	} 
  	
  	p.hola[1][a.x].j=3;
  	
  	i=0;
	pair.character = '0';
  	pair.integer = 48;
  	while pair.integer >= i: {
    	if pair.integer == vector[0][0] || !(int)pair.character || i%2==0:{
      		print 't', 'r', 'u', 'e', '\n';
      	}
    	else 
      		print 'f', 'a', 'l', 's', 'e', '\n';
    	i=i+1;
  	}
  	
  	if n.g<=6:{
  		if 6+5==9:
  			print hola;
  		else {
  			i=7;
  			i=i-2;
  		}
  		input t, o;
  		return 9;
  	}
  	
  	print f(i, (double)i); # Invocation as an expression
  	vector[9][(int)4.3] = 5;
  	f(1, 2.2); # Invocation as a statement
}